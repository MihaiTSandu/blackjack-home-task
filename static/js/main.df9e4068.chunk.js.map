{"version":3,"sources":["utils/api.ts","app/components/Button/index.tsx","app/components/BetAmountInput/index.tsx","app/pages/GamePage.tsx","app/styles/global-styles.ts","app/styles/themes.ts","app/index.tsx","index.tsx"],"names":["baseUrl","sit","balance","a","requestUrl","fetch","method","headers","body","response","json","responseJson","ok","Error","validation","messsage","deal","bet","sessionId","message","turn","action","stand","Button","onClick","label","variant","StyledButton","type","primaryVariant","css","p","theme","background","primary","secondaryVariant","secondary","styled","button","translations","BetAmountInput","value","onAmountChange","Container","StyledInput","placeholder","max","min","onInput","event","parseInt","target","console","error","div","input","prop","border","text","backgroundFocus","GamePage","useState","setBalance","availableBetOptions","setAvailableBetOptions","setSessionId","betAmount","setBetAmount","playerCards","setPlayerCards","dealerCards","setDealerCards","setRoundEnded","winAmount","setWinAmount","currentBalance","setCurrentBalance","sitButtonClick","alert","standButtonClick","dealButtonClick","roundEnded","turnButtonClick","player","playerCard","Header","amount","Actions","Options","map","option","OptionButton","selected","Table","length","Cards","card","rank","toString","suite","toLowerCase","height","uuidv4","optionButtonSelected","h1","GlobalStyle","createGlobalStyle","themes","dark","textHover","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAEaA,EAAU,+BAEVC,EAAG,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACTC,EADS,UACOJ,EADP,iBAGQK,MAAMD,EAAY,CACrCE,OAAQ,OACRC,QAAS,CACL,eAAgB,qCAEpBC,KAAK,WAAD,OAAaN,KARN,cAGTO,EAHS,gBAUYA,EAASC,OAVrB,UAUTC,EAVS,QAWXF,EAASG,GAXE,0CAYJD,GAZI,cAcLE,MAAMF,EAAaG,WAAWN,KAAKO,UAd9B,4CAAH,sDAkBHC,EAAI,uCAAG,WAAOC,EACvBC,GADgB,mBAAAf,EAAA,6DAEVC,EAFU,UAEMJ,EAFN,kBAIOK,MAAMD,EAAY,CACrCE,OAAQ,OACRC,QAAS,CACL,eAAgB,qCAEpBC,KAAK,OAAD,OAASS,EAAT,sBAA0BC,KATlB,cAIVT,EAJU,gBAWWA,EAASC,OAXpB,UAWVC,EAXU,QAYZF,EAASG,GAZG,0CAaLD,GAbK,cAeNE,MAAMF,EAAaG,WAAWN,KAAKW,SAf7B,4CAAH,wDAqBJC,EAAI,uCAAG,WAChBC,EACAH,GAFgB,mBAAAf,EAAA,6DAIVC,EAJU,UAIMJ,EAJN,kBAMOK,MAAMD,EAAY,CACrCE,OAAQ,OACRC,QAAS,CACL,eAAgB,qCAEpBC,KAAK,UAAD,OAAYa,EAAZ,sBAAgCH,KAXxB,cAMVT,EANU,gBAaWA,EAASC,OAbpB,UAaVC,EAbU,QAcZF,EAASG,GAdG,0CAeLD,GAfK,cAiBNE,MAAMF,EAAaG,WAAWN,KAAKW,SAjB7B,4CAAH,wDAqBJG,EAAK,uCAAG,WAAOJ,GAAP,mBAAAf,EAAA,6DACXC,EADW,UACKJ,EADL,mBAGMK,MAAMD,EAAY,CACrCE,OAAQ,OACRC,QAAS,CACL,eAAgB,qCAEpBC,KAAK,aAAD,OAAeU,KARN,cAGXT,EAHW,gBAUUA,EAASC,OAVnB,UAUXC,EAVW,QAWbF,EAASG,GAXI,0CAYND,GAZM,cAcPE,MAAMF,EAAaG,WAAWN,KAAKW,SAd5B,4CAAH,sD,OC/CHI,EARA,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,MAA8C,IAAvCC,eAAuC,MAA7B,UAA6B,EACvE,OACE,cAACC,EAAD,CAAcD,QAASA,EAASE,KAAK,SAASJ,QAASA,EAAvD,SACGC,KAODI,EAAiBC,YAAH,4JACE,SAACC,GAAD,OAAOA,EAAEC,MAAMC,cACnB,SAACF,GAAD,OAAOA,EAAEC,MAAME,WACtB,SAACH,GAAD,OAAOA,EAAEC,MAAME,WAGF,SAACH,GAAD,OAAOA,EAAEC,MAAME,WAC1B,SAACH,GAAD,OAAOA,EAAEC,MAAMC,cAItBE,EAAmBL,YAAH,4JACA,SAACC,GAAD,OAAOA,EAAEC,MAAMI,aACnB,SAACL,GAAD,OAAOA,EAAEC,MAAMI,aACtB,SAACL,GAAD,OAAOA,EAAEC,MAAMC,cAGF,SAACF,GAAD,OAAOA,EAAEC,MAAMC,cAC1B,SAACF,GAAD,OAAOA,EAAEC,MAAMI,aAItBT,EAAeU,IAAOC,OAAV,gPACd,kBAA8B,YAA9B,EAAGZ,QAAuCG,EAAiB,MAC3D,kBAA8B,cAA9B,EAAGH,QAAyCS,EAAmB,MCvC7DI,EAEC,MAqCQC,EA5BQ,SAAC,GAII,IAH1BC,EAGyB,EAHzBA,MACAC,EAEyB,EAFzBA,eACAlB,EACyB,EADzBA,QAEA,OACE,eAACmB,EAAD,WACE,cAACC,EAAD,CACEC,YAAY,uBACZjB,KAAK,SACLkB,IAAI,OACJC,IAAI,KACJN,MAAOA,GAAS,GAChBO,QAAS,SAACC,GACR,IACEP,EACEQ,SAAUD,EAAME,OAA4BV,MAAO,KAErD,SACAW,QAAQC,MAAM,8CAIpB,cAAC,EAAD,CAAQ3B,QAAQ,UAAUF,QAASA,EAASC,MAAOc,QAOnDI,EAAYN,IAAOiB,IAAV,mDAITV,EAAcP,IAAOkB,MAAV,gUAGkB,SAACC,GAAD,OAAUA,EAAKxB,MAAMyB,UAC1B,SAACD,GAAD,OAAUA,EAAKxB,MAAME,WACxC,SAACsB,GAAD,OAAUA,EAAKxB,MAAM0B,QAOd,SAACF,GAAD,OAAUA,EAAKxB,MAAM2B,mBCpDjCpB,EACG,YADHA,EAEY,iCAFZA,EAGM,uCAGG,SAASqB,IAAY,IAAD,EACHC,qBADG,mBAC1B3D,EAD0B,KACjB4D,EADiB,OAEqBD,mBACpD,IAH+B,mBAE1BE,EAF0B,KAELC,EAFK,OAKCH,mBAAS,IALV,mBAK1B3C,EAL0B,KAKf+C,EALe,OAMCJ,qBAND,mBAM1BK,EAN0B,KAMfC,EANe,OAOKN,mBAAsB,IAP3B,mBAO1BO,EAP0B,KAObC,EAPa,OAQKR,mBAAsB,IAR3B,mBAQ1BS,EAR0B,KAQbC,EARa,OAUGV,oBAAS,GAVZ,mBAUdW,GAVc,aAWCX,qBAXD,mBAW1BY,EAX0B,KAWfC,EAXe,OAYWb,qBAZX,mBAY1Bc,GAZ0B,KAYVC,GAZU,KAc3BC,GAAc,uCAAG,gCAAA1E,EAAA,2DACL,IAAZD,GAAiBA,EAAW,IAAMA,EAAW,KAD5B,gBAEnB4E,MAAMvC,GAFa,gDAKgCtC,EAAIC,GALpC,gBAKT6D,EALS,EAKTA,oBAAqB7C,EALZ,EAKYA,UAC7B+C,EAAa/C,GACb8C,EAAuBD,GACvBI,EAAaD,GARI,kDAUjBY,MAAM,EAAD,IAVY,0DAAH,qDAedC,GAAgB,uCAAG,sBAAA5E,EAAA,0DACnBe,EADmB,gCAEfI,EAAMJ,GAFS,6BAIrB4D,MAAMvC,GAJe,2CAAH,qDAQhByC,GAAe,uCAAG,kCAAA7E,EAAA,0DAClBe,EADkB,0CAGqCF,EACrDkD,GAAa,EACbhD,GALgB,gBAGVkD,EAHU,EAGVA,YAAaE,EAHH,EAGGA,YAAaW,EAHhB,EAGgBA,WAIlCV,EAAeD,GACfD,EAAeD,GACfI,EAAcS,GATI,kDAWlBH,MAAM,EAAD,IAXa,gCAcpBA,MAAMvC,GAdc,0DAAH,qDAkBf2C,GAAe,uCAAG,WAAO7D,GAAP,6BAAAlB,EAAA,0DAClBe,EADkB,6BAGH,QAAXG,EAHc,iCAIiCD,EAC/CC,EACAH,GANc,gBAIIiE,EAJJ,EAIRC,WAAoBH,EAJZ,EAIYA,WAI5BZ,EAAe,GAAD,mBAAKD,GAAL,CAAmBe,KACjCX,EAAcS,GACdP,EAAaD,GACbG,GAAkBD,IAXF,yCAcRvD,EAAKC,EAAQH,GAdL,iBAaRoD,EAbQ,EAaRA,YAAaW,EAbL,EAaKA,WAAYR,EAbjB,EAaiBA,UAAWE,EAb5B,EAa4BA,eAE5CJ,EAAeD,GACfE,EAAcS,GACdP,EAAaD,GACbG,GAAkBD,GAlBF,0DAqBlBG,MAAM,EAAD,IArBa,gCAwBpBA,MAAMvC,GAxBc,0DAAH,sDA4BrB,OACE,eAAC,GAAD,WACE,cAAC8C,GAAD,UAAS9C,IAET,cAAC,EAAD,CACEE,MAAOvC,EACPwC,eAAgB,SAAC4C,GAAD,OAAYxB,EAAWwB,IACvC9D,QAASqD,KAGX,eAACU,GAAD,WACE,cAAC,EAAD,CAAQ7D,QAAQ,YAAYF,QAASwD,GAAiBvD,MAAM,SAC5D,cAAC,EAAD,CACEC,QAAQ,YACRF,QAAS,WACP0D,GAAgB,QAElBzD,MAAM,QAER,cAAC,EAAD,CACEC,QAAQ,YACRF,QAAS,WACP0D,GAAgB,SAElBzD,MAAM,SAER,cAAC,EAAD,CAAQC,QAAQ,YAAYF,QAASuD,GAAkBtD,MAAM,aAG/D,cAAC+D,EAAD,UACGzB,EAAoB0B,KAAI,SAACC,GAAD,OACvB,cAACC,EAAD,CAEEC,SAAUF,IAAWxB,EACrB1C,QAAS,kBAAM2C,EAAauB,IAH9B,SAKGA,GAJIA,QASX,eAACG,EAAD,WACGvB,EAAYwB,OAAS,GAAK,wCAC3B,cAACC,EAAD,UACGzB,EAAYmB,KAAI,SAACO,GAAD,OACf,cAAC,IAAD,CAEEA,KAAI,UACuB,OAAzBA,EAAKC,KAAKC,WAAsB,IAAMF,EAAKC,MADzC,OAEDD,EAAKG,MAAM,GAAGC,eACjBC,OAAO,SAJFC,oBASVlC,EAAY0B,OAAS,GAAK,wCAC3B,cAACC,EAAD,UACG3B,EAAYqB,KAAI,SAACO,GAAD,OACf,cAAC,IAAD,CAEEA,KAAI,UACuB,OAAzBA,EAAKC,KAAKC,WAAsB,IAAMF,EAAKC,MADzC,OAEDD,EAAKG,MAAM,GAAGC,eACjBC,OAAO,SAJFC,0BAanB,I,EAAMT,EAAQxD,IAAOiB,IAAV,uJAQLyC,EAAQ1D,IAAOiB,IAAV,0HAOLiD,EAAuBzE,YAAH,qEACJ,SAACC,GAAD,OAAOA,EAAEC,MAAMC,cAC1B,SAACF,GAAD,OAAOA,EAAEC,MAAME,WAGpByD,EAAetD,IAAOC,OAAV,iTACI,SAACP,GAAD,OAAOA,EAAEC,MAAME,WACnB,SAACH,GAAD,OAAOA,EAAEC,MAAME,WACtB,SAACH,GAAD,OAAOA,EAAEC,MAAMC,cAEtB,SAACF,GAAD,OAAQA,EAAE6D,SAAWW,EAAuB,KAY1CA,GAIAf,EAAUnD,IAAOiB,IAAV,kJAGTqC,GASEhD,GAAYN,IAAOiB,IAAV,4HAOTiC,GAAUlD,IAAOiB,IAAV,iJAYP+B,GAAShD,IAAOmE,GAAV,2CACD,SAACzE,GAAD,OAAOA,EAAEC,MAAME,WCjPbuE,GAAcC,YAAH,wLAUA,SAAC3E,GAAD,OAAOA,EAAEC,MAAMC,cAC1B,SAACF,GAAD,OAAOA,EAAEC,MAAM0B,QCHbiD,GAAS,CACpBC,KAXgB,CAChB1E,QAAS,UACTE,UAAW,UACXqB,OAAQ,OACRxB,WAAY,UACZ0B,gBAAiB,UACjBD,KAAM,UACNmD,UAAW,SCSAC,GAVH,WACV,OACE,eAAC,IAAD,CAAe9E,MAAO2E,GAAOC,KAA7B,UACE,cAACH,GAAD,IAEA,cAAC7C,EAAD,QCPNmD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.df9e4068.chunk.js","sourcesContent":["import { DealResponse, SitResponse, StandResponse, TurnResponse } from './interface';\n\nexport const baseUrl = \"https://blackjack.fuzz.me.uk\";\n\nexport const sit = async (balance: number): Promise<SitResponse> => {\n    const requestUrl = `${baseUrl}/sit`;\n\n    const response = await fetch(requestUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: `balance=${balance}`\n    });\n    const responseJson = await response.json();\n    if (response.ok) {\n        return responseJson;\n    } else {\n        throw Error(responseJson.validation.body.messsage);\n    }\n};\n\nexport const deal = async (bet: number,\n    sessionId: string): Promise<DealResponse> => {\n    const requestUrl = `${baseUrl}/deal`;\n\n    const response = await fetch(requestUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: `bet=${bet}&sessionId=${sessionId}`,\n    });\n    const responseJson = await response.json();\n    if (response.ok) {\n        return responseJson;\n    } else {\n        throw Error(responseJson.validation.body.message);\n    }\n};\n\nexport type TurnAction = 'stay' | 'hit';\n\nexport const turn = async (\n    action: TurnAction,\n    sessionId: string\n): Promise<TurnResponse> => {\n    const requestUrl = `${baseUrl}/turn`;\n    \n    const response = await fetch(requestUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: `action=${action}&sessionId=${sessionId}`\n    });\n    const responseJson = await response.json();\n    if (response.ok) {\n        return responseJson;\n    } else {\n        throw Error(responseJson.validation.body.message);\n    }\n}\n\nexport const stand = async (sessionId: string): Promise<StandResponse> => {\n    const requestUrl = `${baseUrl}/stand`;\n\n    const response = await fetch(requestUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: `sessionId=${sessionId}`,\n    });\n    const responseJson = await response.json();\n    if (response.ok) {\n        return responseJson;\n    } else {\n        throw Error(responseJson.validation.body.message);\n    }\n}","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport interface ButtonProps {\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  label: string;\n  variant?: \"primary\" | \"secondary\";\n}\n\nconst Button = ({ onClick, label, variant = \"primary\" }: ButtonProps) => {\n  return (\n    <StyledButton variant={variant} type=\"button\" onClick={onClick}>\n      {label}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n\nconst primaryVariant = css`\n  background-color: ${(p) => p.theme.background};\n  border-color: ${(p) => p.theme.primary};\n  color: ${(p) => p.theme.primary};\n\n  &:hover {\n    background-color: ${(p) => p.theme.primary};\n    color: ${(p) => p.theme.background};\n  }\n`;\n\nconst secondaryVariant = css`\n  background-color: ${(p) => p.theme.secondary};\n  border-color: ${(p) => p.theme.secondary};\n  color: ${(p) => p.theme.background};\n\n  &:hover {\n    background-color: ${(p) => p.theme.background};\n    color: ${(p) => p.theme.secondary};\n  }\n`;\n\nconst StyledButton = styled.button<{ variant?: ButtonProps[\"variant\"] }>`\n  ${({ variant }) => (variant === \"primary\" ? primaryVariant : \"\")}\n  ${({ variant }) => (variant === \"secondary\" ? secondaryVariant : \"\")}\n\n  border-width: 2px;\n  border-style: solid;\n  border-radius: 1.375rem;\n  cursor: pointer;\n  font-size: 1.25rem;\n  font-weight: 800;\n  padding: 0.25rem 1.5rem;\n  text-transform: uppercase;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../Button\";\n\nconst translations = {\n  inputPlaceHolder: \"Bet amount (10 -1000)\",\n  sit: \"sit\",\n};\n\nexport interface BetAmountInputProps {\n  value: number | undefined;\n  onAmountChange: (amount: number) => void;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}\n\nconst BetAmountInput = ({\n  value,\n  onAmountChange,\n  onClick,\n}: BetAmountInputProps) => {\n  return (\n    <Container>\n      <StyledInput\n        placeholder=\"Bet amount (10-1000)\"\n        type=\"number\"\n        max=\"1000\"\n        min=\"10\"\n        value={value || \"\"}\n        onInput={(event) => {\n          try {\n            onAmountChange(\n              parseInt((event.target as HTMLInputElement).value, 10)\n            );\n          } catch {\n            console.error(\"Could not parse bet amount input value\");\n          }\n        }}\n      />\n      <Button variant=\"primary\" onClick={onClick} label={translations.sit} />\n    </Container>\n  );\n};\n\nexport default BetAmountInput;\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst StyledInput = styled.input`\n  background-color: transparent;\n  border: 0;\n  border-bottom: 0.0625rem solid ${(prop) => prop.theme.border};\n  border-left: 0.1875 solid ${(prop) => prop.theme.primary};\n  color: ${(prop) => prop.theme.text};\n  font-size: 1.25rem;\n  padding: 0.75rem 1rem;\n  min-width: 15rem;\n  margin-right: 0.5rem;\n\n  :focus {\n    background: ${(prop) => prop.theme.backgroundFocus};\n    outline: none;\n  }\n`;\n","import React, { useState } from \"react\";\nimport CardVisual from \"react-free-playing-cards\";\nimport styled, { css } from \"styled-components\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { deal, sit, stand, turn, TurnAction } from \"../../utils/api\";\nimport { Card } from \"../../utils/interface\";\nimport BetAmountInput from \"../components/BetAmountInput\";\nimport Button from \"../components/Button\";\n\nconst translations = {\n  title: \"Blackjack\",\n  sitRequirement: \"You must first sit at a table!\",\n  betRange: \"Must place a bet between 10 and 1000\",\n};\n\nexport default function GamePage() {\n  const [balance, setBalance] = useState<number>();\n  const [availableBetOptions, setAvailableBetOptions] = useState<Array<number>>(\n    []\n  );\n  const [sessionId, setSessionId] = useState(\"\");\n  const [betAmount, setBetAmount] = useState<number>();\n  const [playerCards, setPlayerCards] = useState<Array<Card>>([]);\n  const [dealerCards, setDealerCards] = useState<Array<Card>>([]);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [roundEnded, setRoundEnded] = useState(false);\n  const [winAmount, setWinAmount] = useState<number>();\n  const [currentBalance, setCurrentBalance] = useState<number>();\n\n  const sitButtonClick = async () => {\n    if (balance === 0 || balance! < 10 || balance! > 1000) {\n      alert(translations.betRange);\n    } else {\n      try {\n        const { availableBetOptions, sessionId } = await sit(balance!);\n        setSessionId(sessionId);\n        setAvailableBetOptions(availableBetOptions);\n        setBetAmount(betAmount);\n      } catch (error) {\n        alert(error);\n      }\n    }\n  };\n\n  const standButtonClick = async () => {\n    if (sessionId) {\n      await stand(sessionId);\n    } else {\n      alert(translations.sitRequirement);\n    }\n  };\n\n  const dealButtonClick = async () => {\n    if (sessionId) {\n      try {\n        const { playerCards, dealerCards, roundEnded } = await deal(\n          betAmount || 0,\n          sessionId\n        );\n        setDealerCards(dealerCards);\n        setPlayerCards(playerCards);\n        setRoundEnded(roundEnded);\n      } catch (error) {\n        alert(error);\n      }\n    } else {\n      alert(translations.sitRequirement);\n    }\n  };\n\n  const turnButtonClick = async (action: TurnAction) => {\n    if (sessionId) {\n      try {\n        if (action === \"hit\") {\n          const { playerCard: player, roundEnded } = await turn(\n            action,\n            sessionId\n          );\n          setPlayerCards([...playerCards!, player!]);\n          setRoundEnded(roundEnded);\n          setWinAmount(winAmount);\n          setCurrentBalance(currentBalance);\n        } else {\n          const { dealerCards, roundEnded, winAmount, currentBalance } =\n            await turn(action, sessionId);\n          setDealerCards(dealerCards);\n          setRoundEnded(roundEnded);\n          setWinAmount(winAmount);\n          setCurrentBalance(currentBalance);\n        }\n      } catch (error) {\n        alert(error);\n      }\n    } else {\n      alert(translations.sitRequirement);\n    }\n  };\n\n  return (\n    <Container>\n      <Header>{translations.title}</Header>\n\n      <BetAmountInput\n        value={balance}\n        onAmountChange={(amount) => setBalance(amount)}\n        onClick={sitButtonClick}\n      />\n\n      <Actions>\n        <Button variant=\"secondary\" onClick={dealButtonClick} label=\"Deal\" />\n        <Button\n          variant=\"secondary\"\n          onClick={() => {\n            turnButtonClick(\"hit\");\n          }}\n          label=\"Hit\"\n        />\n        <Button\n          variant=\"secondary\"\n          onClick={() => {\n            turnButtonClick(\"stay\");\n          }}\n          label=\"Stay\"\n        />\n        <Button variant=\"secondary\" onClick={standButtonClick} label=\"Stand\" />\n      </Actions>\n\n      <Options>\n        {availableBetOptions.map((option) => (\n          <OptionButton\n            key={option}\n            selected={option === betAmount}\n            onClick={() => setBetAmount(option)}\n          >\n            {option}\n          </OptionButton>\n        ))}\n      </Options>\n\n      <Table>\n        {dealerCards.length > 0 && <h2>Dealer</h2>}\n        <Cards>\n          {dealerCards.map((card) => (\n            <CardVisual\n              key={uuidv4()}\n              card={`${\n                card.rank.toString() === \"10\" ? \"T\" : card.rank\n              }${card.suite[0].toLowerCase()}`}\n              height=\"128px\"\n            />\n          ))}\n        </Cards>\n\n        {playerCards.length > 0 && <h2>Player</h2>}\n        <Cards>\n          {playerCards.map((card) => (\n            <CardVisual\n              key={uuidv4()}\n              card={`${\n                card.rank.toString() === \"10\" ? \"T\" : card.rank\n              }${card.suite[0].toLowerCase()}`}\n              height=\"128px\"\n            />\n          ))}\n        </Cards>\n      </Table>\n    </Container>\n  );\n}\n\nconst Table = styled.div`\n  align-content: center;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Cards = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin-top: 1.25rem;\n`;\n\nconst optionButtonSelected = css`\n  background-color: ${(p) => p.theme.background};\n  color: ${(p) => p.theme.primary};\n`;\n\nconst OptionButton = styled.button<{ selected?: boolean }>`\n  background-color: ${(p) => p.theme.primary};\n  border-color: ${(p) => p.theme.primary};\n  color: ${(p) => p.theme.background};\n\n  ${(p) => (p.selected ? optionButtonSelected : \"\")}\n\n  border-radius: 100%;\n  cursor: pointer;\n  border-width: 2px;\n  border-style: solid;\n  font-size: 1.5rem;\n  width: 3.75rem;\n  height: 3.75rem;\n  text-align: center;\n\n  &:hover {\n    ${optionButtonSelected}\n  }\n`;\n\nconst Options = styled.div`\n  margin-top: 2.5rem;\n\n  ${OptionButton} {\n    margin-right: 0.5rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 2.5rem;\n`;\n\nconst Actions = styled.div`\n  margin-top: 2.5rem;\n\n  * {\n    margin-right: 0.5rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst Header = styled.h1`\n  color: ${(p) => p.theme.primary};\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  html,\n  body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    background-color: ${(p) => p.theme.background};\n    color: ${(p) => p.theme.text};\n  }\n`;","export const dark = {\n    primary: \"#7ff800\",\n    secondary: \"#fce403\",\n    border: \"#000\",\n    background: \"#171717\",\n    backgroundFocus: \"#2e2e2e\",\n    text: \"#717171\",\n    textHover: \"#fff\",\n  };\n  \n  export const themes = {\n    dark,\n  };\n  \n  export type Theme = typeof dark;","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport GamePage from \"./pages/GamePage\";\nimport { GlobalStyle } from \"./styles/global-styles\";\nimport { themes } from \"./styles/themes\";\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={themes.dark}>\n      <GlobalStyle />\n\n      <GamePage />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}